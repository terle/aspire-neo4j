@page "/graph"
@using Neo4j.Driver
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject IDriver _driver

<PageTitle>Neo4j</PageTitle>

<h1>Graph data - Neo4j</h1>

<p>Simple demo of the graph database.</p>

@if (messages == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
        @foreach (var message in messages)
        {
            <li>@message</li>
        }
    </ul>
}



@code {
    private List<string>? messages;

    protected override async Task OnInitializedAsync()
    {
        messages = new List<string>()
        {
            await GetGreetingAsync("Hello from OnInitializedAsync")
        };
    }


    private async Task<string> GetGreetingAsync(string message)
    {
        //Method lifted from neo4j Idriver guide: https://neo4j.com/docs/getting-started/languages-guides/neo4j-dotnet/
        await using var session = _driver.AsyncSession();
        var greeting = await session.ExecuteWriteAsync(
            async tx =>
            {
                var result = await tx.RunAsync(
                    "CREATE (a:Greeting) " +
                    "SET a.message = $message " +
                    "RETURN a.message + ', from node ' + id(a)",
                    new { message });

                var record = await result.SingleAsync();
                return record[0].As<string>();
            });

        return greeting;
    }
}
